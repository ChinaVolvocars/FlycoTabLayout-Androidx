apply plugin: 'maven-publish'

Properties properties = new Properties()
File projectPropertiesFile = project.file('deploy.properties')
if (projectPropertiesFile.exists()) {
    properties.load(projectPropertiesFile.newDataInputStream())
} else {
    throw new Error("Cannot find deploy.properties file in " + project.name + " folder")
}
publishing {
    publications {
        mavenjava(MavenPublication) {
            groupId project.group
            version project.version
            artifactId project.name
            artifact file("$buildDir/outputs/aar/${project.name}-release.aar")

            //http://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)

                        //If there are any exclusions in dependency
                        if (it.excludeRules.size() > 0) {
                            def exclusionsNode = dependencyNode.appendNode('exclusions')
                            it.excludeRules.each { rule ->
                                def exclusionNode = exclusionsNode.appendNode('exclusion')
                                exclusionNode.appendNode('groupId', rule.group)
                                exclusionNode.appendNode('artifactId', rule.module)
                            }
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url properties.getProperty("maven.url")
            credentials {
                username properties.getProperty("maven.username")
                password properties.getProperty("maven.password")
            }
        }
    }
}